[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "importPath": "inventory.views",
        "description": "inventory.views",
        "isExtraImport": true,
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "CategoryViewSet",
        "importPath": "inventory.views",
        "description": "inventory.views",
        "isExtraImport": true,
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "authapp",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "authapp",
        "description": "authapp",
        "detail": "authapp",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "django.db",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db",
        "description": "django.db",
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "getRoutes",
        "importPath": "authapp.views",
        "description": "authapp.views",
        "isExtraImport": true,
        "detail": "authapp.views",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Description",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "SubProduct",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "inventory.models",
        "description": "inventory.models",
        "isExtraImport": true,
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "KiaEnterprises.asgi",
        "description": "KiaEnterprises.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "KiaEnterprises.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-g)h_(#mh&c1#a18!l+yzi_f-kewhjarcc$vg^-19a)dl5m4a06'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['0.0.0.0','*']\n# Application definition\nINSTALLED_APPS = [",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-g)h_(#mh&c1#a18!l+yzi_f-kewhjarcc$vg^-19a)dl5m4a06'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['0.0.0.0','*']\n# Application definition\nINSTALLED_APPS = [\n    'admin_soft.apps.AdminSoftDashboardConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['0.0.0.0','*']\n# Application definition\nINSTALLED_APPS = [\n    'admin_soft.apps.AdminSoftDashboardConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['0.0.0.0','*']\n# Application definition\nINSTALLED_APPS = [\n    'admin_soft.apps.AdminSoftDashboardConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'admin_soft.apps.AdminSoftDashboardConfig',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'rest_framework_simplejwt.token_blacklist',",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    )\n}\nSIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=15),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=90),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(minutes=15),\n    \"REFRESH_TOKEN_LIFETIME\": timedelta(days=90),\n    \"ROTATE_REFRESH_TOKENS\": True,\n    \"BLACKLIST_AFTER_ROTATION\": True,\n    \"UPDATE_LAST_LOGIN\": False,\n    \"ALGORITHM\": \"HS256\",\n    \"VERIFYING_KEY\": \"\",\n    \"AUDIENCE\": None,\n    \"ISSUER\": None,",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'KiaEnterprises.urls'",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "ROOT_URLCONF = 'KiaEnterprises.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "WSGI_APPLICATION = 'KiaEnterprises.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nimport os\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_ROOT =  os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\nimport os\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_ROOT =  os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nimport os\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_ROOT =  os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "USE_TZ = True\nimport os\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nMEDIA_ROOT =  os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nMEDIA_ROOT =  os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "MEDIA_ROOT =  os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "KiaEnterprises.settings",
        "description": "KiaEnterprises.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "KiaEnterprises.settings",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "KiaEnterprises.urls",
        "description": "KiaEnterprises.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'inventory', viewset=ProductViewSet, basename='ProductQueryset')\nrouter.register(r'category', viewset=CategoryViewSet, basename='CategoryQueryset')\nurlpatterns = [\n  path('admin/', admin.site.urls),\n  path('',include(router.urls)),   \n  path('auth/',include(\"authapp.urls\"))\n]+static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "KiaEnterprises.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "KiaEnterprises.urls",
        "description": "KiaEnterprises.urls",
        "peekOfCode": "urlpatterns = [\n  path('admin/', admin.site.urls),\n  path('',include(router.urls)),   \n  path('auth/',include(\"authapp.urls\"))\n]+static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "KiaEnterprises.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "KiaEnterprises.wsgi",
        "description": "KiaEnterprises.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "KiaEnterprises.wsgi",
        "documentation": {}
    },
    {
        "label": "AuthappConfig",
        "kind": 6,
        "importPath": "authapp.apps",
        "description": "authapp.apps",
        "peekOfCode": "class AuthappConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'authapp'",
        "detail": "authapp.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "authapp.urls",
        "description": "authapp.urls",
        "peekOfCode": "urlpatterns = [\n    path('',getRoutes,name = \"auth_routes\"),\n    path('token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),\n    path('token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),\n]",
        "detail": "authapp.urls",
        "documentation": {}
    },
    {
        "label": "getRoutes",
        "kind": 2,
        "importPath": "authapp.views",
        "description": "authapp.views",
        "peekOfCode": "def getRoutes(request):\n    routes = {\n        \"token\":\"token\",\n        \"refresh\":\"token/refresh/\"\n    }\n    return Response(routes)",
        "detail": "authapp.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0001_initial",
        "description": "inventory.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Product',\n            fields=[\n                ('id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),\n                ('name', models.CharField(max_length=256)),",
        "detail": "inventory.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0002_alter_image_product_alter_subproduct_product",
        "description": "inventory.migrations.0002_alter_image_product_alter_subproduct_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='image',\n            name='product',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.product'),\n        ),",
        "detail": "inventory.migrations.0002_alter_image_product_alter_subproduct_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0003_alter_image_product",
        "description": "inventory.migrations.0003_alter_image_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0002_alter_image_product_alter_subproduct_product'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='image',\n            name='product',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_images', to='inventory.product'),\n        ),",
        "detail": "inventory.migrations.0003_alter_image_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0004_remove_category_products",
        "description": "inventory.migrations.0004_remove_category_products",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0003_alter_image_product'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='category',\n            name='products',\n        ),\n    ]",
        "detail": "inventory.migrations.0004_remove_category_products",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0005_alter_category_id",
        "description": "inventory.migrations.0005_alter_category_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0004_remove_category_products'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='category',\n            name='id',\n            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),\n        ),",
        "detail": "inventory.migrations.0005_alter_category_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0006_product_category_alter_category_id",
        "description": "inventory.migrations.0006_product_category_alter_category_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0005_alter_category_id'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='category',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='inventory.category'),\n        ),",
        "detail": "inventory.migrations.0006_product_category_alter_category_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0007_alter_category_name",
        "description": "inventory.migrations.0007_alter_category_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0006_product_category_alter_category_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='category',\n            name='name',\n            field=models.CharField(max_length=256, unique=True),\n        ),",
        "detail": "inventory.migrations.0007_alter_category_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0008_alter_category_name",
        "description": "inventory.migrations.0008_alter_category_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0007_alter_category_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='category',\n            name='name',\n            field=models.CharField(max_length=256),\n        ),",
        "detail": "inventory.migrations.0008_alter_category_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0009_alter_category_name",
        "description": "inventory.migrations.0009_alter_category_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0008_alter_category_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='category',\n            name='name',\n            field=models.CharField(max_length=256, unique=True),\n        ),",
        "detail": "inventory.migrations.0009_alter_category_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0010_alter_image_image",
        "description": "inventory.migrations.0010_alter_image_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0009_alter_category_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='image',\n            name='image',\n            field=models.ImageField(upload_to='./assets/products'),\n        ),",
        "detail": "inventory.migrations.0010_alter_image_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0011_alter_image_image",
        "description": "inventory.migrations.0011_alter_image_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0010_alter_image_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='image',\n            name='image',\n            field=models.ImageField(upload_to='assets/products'),\n        ),",
        "detail": "inventory.migrations.0011_alter_image_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0012_alter_image_image_alter_subproduct_image",
        "description": "inventory.migrations.0012_alter_image_image_alter_subproduct_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0011_alter_image_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='image',\n            name='image',\n            field=models.TextField(max_length=256),\n        ),",
        "detail": "inventory.migrations.0012_alter_image_image_alter_subproduct_image",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "inventory.migrations.0013_alter_product_category",
        "description": "inventory.migrations.0013_alter_product_category",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('inventory', '0012_alter_image_image_alter_subproduct_image'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='category',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='inventory.category'),\n        ),",
        "detail": "inventory.migrations.0013_alter_product_category",
        "documentation": {}
    },
    {
        "label": "DescriptionInline",
        "kind": 6,
        "importPath": "inventory.admin",
        "description": "inventory.admin",
        "peekOfCode": "class DescriptionInline(admin.StackedInline):  # or admin.StackedInline\n    model = Description\n    extra =  1\nclass ImagesInline(admin.StackedInline):  # or admin.StackedInline\n    model = Image\n    extra =  1\nclass ProductAdmin(admin.ModelAdmin):\n    inlines = [ImagesInline,DescriptionInline]\n# Register your models here.\nadmin.site.register(Product,ProductAdmin)",
        "detail": "inventory.admin",
        "documentation": {}
    },
    {
        "label": "ImagesInline",
        "kind": 6,
        "importPath": "inventory.admin",
        "description": "inventory.admin",
        "peekOfCode": "class ImagesInline(admin.StackedInline):  # or admin.StackedInline\n    model = Image\n    extra =  1\nclass ProductAdmin(admin.ModelAdmin):\n    inlines = [ImagesInline,DescriptionInline]\n# Register your models here.\nadmin.site.register(Product,ProductAdmin)\nadmin.site.register(SubProduct)\nadmin.site.register(Category)",
        "detail": "inventory.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "inventory.admin",
        "description": "inventory.admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n    inlines = [ImagesInline,DescriptionInline]\n# Register your models here.\nadmin.site.register(Product,ProductAdmin)\nadmin.site.register(SubProduct)\nadmin.site.register(Category)",
        "detail": "inventory.admin",
        "documentation": {}
    },
    {
        "label": "InventoryConfig",
        "kind": 6,
        "importPath": "inventory.apps",
        "description": "inventory.apps",
        "peekOfCode": "class InventoryConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'inventory'",
        "detail": "inventory.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class Category(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(null=False, max_length=256, unique=True)\n    # Makes admin panel look sexy   \n    def __str__(self):\n        return self.name\nclass Product(models.Model):\n    #'id' acts as a tool to connect this model to other models\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False, blank=True)\n    name = models.CharField(null=False, max_length=256)",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class Product(models.Model):\n    #'id' acts as a tool to connect this model to other models\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False, blank=True)\n    name = models.CharField(null=False, max_length=256)\n    price = models.PositiveIntegerField(null=False)\n    hasSub = models.BooleanField(null=False) \n    # Establishes models connection with category\n    category = models.ForeignKey(to = Category, on_delete= models.CASCADE, default=1)\n    #Makes admin panel look sexy\n    def __str__(self):",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Description",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class Description(models.Model):\n    about = models.TextField(null = False)\n    dimension = models.CharField(max_length=256)\n    weight = models.PositiveIntegerField()\n    # Establishes models connection with Product\n    # One to one connection as each product is expected to have unique description\n    product = models.OneToOneField(to=Product, on_delete=models.CASCADE, blank=True, null=True)\n    # Makes admin panel look sexy   \n    def __str__(self):\n        return self.about",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "SubProduct",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class SubProduct(models.Model):\n    sub_quality = models.CharField(max_length=256)\n    #Establishes models connection with Product\n    product = models.ForeignKey(to = Product, on_delete=models.CASCADE, related_name=\"subproducts\", blank=True, null=True)\n    image = models.TextField(max_length=256, blank=False, null=False)\n    # Makes admin panel look sexy   \n    def __str__(self):\n        return f\"{self.sub_quality} {self.product.name}\"\nclass Image(models.Model):\n    image = models.ImageField(upload_to ='assets/products', blank=False, null=False)",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "kind": 6,
        "importPath": "inventory.models",
        "description": "inventory.models",
        "peekOfCode": "class Image(models.Model):\n    image = models.ImageField(upload_to ='assets/products', blank=False, null=False)\n    image = models.TextField(max_length=256, blank=False, null=False)\n    # Establishes models connection with Product and SubProduct\n    product = models.ForeignKey(to = Product, on_delete=models.CASCADE,related_name=\"product_images\", blank=True, null=True)",
        "detail": "inventory.models",
        "documentation": {}
    },
    {
        "label": "DescriptionSerializer",
        "kind": 6,
        "importPath": "inventory.serializer",
        "description": "inventory.serializer",
        "peekOfCode": "class DescriptionSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Description\n        fields = '__all__'\nclass ImageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Image\n        fields = '__all__'\nclass SubProductSerializer(serializers.ModelSerializer):\n    class Meta:",
        "detail": "inventory.serializer",
        "documentation": {}
    },
    {
        "label": "ImageSerializer",
        "kind": 6,
        "importPath": "inventory.serializer",
        "description": "inventory.serializer",
        "peekOfCode": "class ImageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Image\n        fields = '__all__'\nclass SubProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SubProduct\n        fields = '__all__'\nclass ProductSerializer(serializers.ModelSerializer):\n    description = DescriptionSerializer()",
        "detail": "inventory.serializer",
        "documentation": {}
    },
    {
        "label": "SubProductSerializer",
        "kind": 6,
        "importPath": "inventory.serializer",
        "description": "inventory.serializer",
        "peekOfCode": "class SubProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = SubProduct\n        fields = '__all__'\nclass ProductSerializer(serializers.ModelSerializer):\n    description = DescriptionSerializer()\n    product_images = ImageSerializer(many = True)\n    subproducts = SubProductSerializer(many=True)\n    class Meta:\n        model = Product",
        "detail": "inventory.serializer",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "inventory.serializer",
        "description": "inventory.serializer",
        "peekOfCode": "class ProductSerializer(serializers.ModelSerializer):\n    description = DescriptionSerializer()\n    product_images = ImageSerializer(many = True)\n    subproducts = SubProductSerializer(many=True)\n    class Meta:\n        model = Product\n        fields = \"__all__\"\n    def create(self, validated_data):\n        description_data = validated_data.pop('description')\n        image_data = validated_data.pop('product_images')",
        "detail": "inventory.serializer",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "inventory.serializer",
        "description": "inventory.serializer",
        "peekOfCode": "class CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = \"__all__\"\nclass CategoryProductSerializer(serializers.ModelSerializer):\n    about = serializers.CharField(source='description.about')\n    # product_image = ImageSerializer(many = True)\n    class Meta:\n        model = Product\n        fields = ['id', 'name', 'price', 'about']",
        "detail": "inventory.serializer",
        "documentation": {}
    },
    {
        "label": "CategoryProductSerializer",
        "kind": 6,
        "importPath": "inventory.serializer",
        "description": "inventory.serializer",
        "peekOfCode": "class CategoryProductSerializer(serializers.ModelSerializer):\n    about = serializers.CharField(source='description.about')\n    # product_image = ImageSerializer(many = True)\n    class Meta:\n        model = Product\n        fields = ['id', 'name', 'price', 'about']\n        # fields = ['id', 'name', 'price', 'about', 'product_image']",
        "detail": "inventory.serializer",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class ProductViewSet(viewsets.ViewSet):\n    def list(self, request):\n        products = Product.objects.all()\n        serialized = ProductSerializer(products, many=True)\n        return Response(serialized.data, status=status.HTTP_200_OK)\n    def retrieve(self, request,pk):\n        try:\n            products = Product.objects.get(id=pk)\n            serialized = ProductSerializer(products, many=False)\n            return Response(serialized.data, status=status.HTTP_200_OK)",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "CategoryViewSet",
        "kind": 6,
        "importPath": "inventory.views",
        "description": "inventory.views",
        "peekOfCode": "class CategoryViewSet(viewsets.ViewSet):\n    def list(self, request):\n        category = Category.objects.all()\n        serialized = CategorySerializer(category, many=True)\n        return Response(serialized.data, status=status.HTTP_200_OK)\n    def retrieve(self, request, pk):\n        try:\n            products = Product.objects.filter(category=pk)\n            # print(products.id)\n            serialized = CategoryProductSerializer(products, many=True)",
        "detail": "inventory.views",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "venv.bin.activate_this",
        "description": "venv.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'KiaEnterprises.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]